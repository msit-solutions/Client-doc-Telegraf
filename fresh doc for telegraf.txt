 
vi entrypoint.sh ( copy paste the below entrypoint.sh)
* vi newdockerfile ( copy paste the below dockerfile )
* docker build  -f newdockerfile -t newtelegraf:2.0 .
* docker image ls
*docker run -d --name newtelegraf-2 newtelegraf:2.0( image name /image id)
*docker container ls
*docker exec -it newtelegraf-2( container name /container id)
===============================================================
vi entrypoint.sh ( copy paste the below entrypoint.sh)
============================================================

entrypoint.sh  ( run chmod +x / entrypoint.sh after copy in dockerfile or change permmissions in local machine and upload)
#!/bin/bash
set -e

if [ "${1:0:1}" = '-' ]; then
            set -- telegraf "$@"
fi

if [ $EUID -ne 0 ]; then:wq

            exec "$@"
    else
         # Allow telegraf to send ICMP packets and bind to privliged ports
          setcap cap_net_raw,cap_net_bind_service+ep /usr/bin/telegraf || echo "Failed to set additional capabilities on /usr/bin/telegraf"

           exec su-exec telegraf "$@"

fi
========================================================================
after copy of the entrypoint change permissions
chmod 664 entrypoint.sh


vi dockerfile (copy paste the below lines in dockerfile )
=========================================

dockerfile for alpine iamge 
===================
FROM alpine:3.15

RUN echo 'hosts: files dns' >> /etc/nsswitch.conf
RUN apk add --no-cache iputils ca-certificates net-snmp-tools procps lm_sensors tzdata su-exec libcap && \
    update-ca-certificates

ENV TELEGRAF_VERSION 1.21.4

RUN set -ex && \
    mkdir ~/.gnupg; \
    echo "disable-ipv6" >> ~/.gnupg/dirmngr.conf; \
    apk add --no-cache --virtual .build-deps wget gnupg tar && \
    for key in \
        05CE15085FC09D18E99EFB22684A14CF2582E0C5 ; \
    do \
        gpg --keyserver hkp://keyserver.ubuntu.com --recv-keys "$key" ; \
    done && \
    wget --no-verbose https://dl.influxdata.com/telegraf/releases/telegraf-${TELEGRAF_VERSION}_static_linux_amd64.tar.gz.asc && \
    wget --no-verbose https://dl.influxdata.com/telegraf/releases/telegraf-${TELEGRAF_VERSION}_static_linux_amd64.tar.gz && \
    gpg --batch --verify telegraf-${TELEGRAF_VERSION}_static_linux_amd64.tar.gz.asc telegraf-${TELEGRAF_VERSION}_static_linux_amd64.tar.gz && \
    mkdir -p /usr/src /etc/telegraf && \
    tar -C /usr/src -xzf telegraf-${TELEGRAF_VERSION}_static_linux_amd64.tar.gz && \
    mv /usr/src/telegraf*/etc/telegraf/telegraf.conf /etc/telegraf/ && \
    mkdir /etc/telegraf/telegraf.d && \
    cp -a /usr/src/telegraf*/usr/bin/telegraf /usr/bin/ && \
    gpgconf --kill all && \
    rm -rf *.tar.gz* /usr/src /root/.gnupg && \
    apk del .build-deps

ARG USER=telegraf2
ENV HOME /home/$USER

RUN apk add --update sudo

# add new user
RUN addgroup -S $USER
RUN adduser --home home/$USER  --shell /bin/ash -D -S $USER \
        && mkdir -p /etc/sudoers.d \
        && echo "$USER ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/$USER \
        && chmod 0440 /etc/sudoers.d/$USER
RUN addgroup  $USER  wheel && \
    addgroup   $USER  telegraf2 && \
    addgroup $USER root && \
    chown -R telegraf2:telegraf2 /etc/telegraf
RUN apk add doas

# ********************************************************
# * Anything else you want to do like clean up goes here *
# ********************************************************

# [Optional] Set the default user. Omit if you want to keep the default as root.
USER $USER

EXPOSE 8125/udp 8092/udp 8094

COPY entrypoint.sh /entrypoint.sh
ENTRYPOINT ["/entrypoint.sh"]
CMD ["telegraf"]
=============================================

docker build   -t newtelegraf:2.0 . 
docker image ls
*docker run -d --name newtelegraf-2 newtelegraf:2.0( image name /image id)
*docker container ls
*docker exec -it newtelegraf-2( container name /container id) sh

